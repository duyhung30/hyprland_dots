#!/usr/bin/env python

import os
import subprocess
import json

filedir = subprocess.run('echo $HOME/.cache/eww/wifi.json', shell=True, text=True, capture_output=True)
filedir = filedir.stdout.strip()
print(filedir)

def guardar_en_json(nombre, icono, seguridad, guardado):
    wifi = {
        "name": nombre,
        "icon": icono,
        "SECURITY": seguridad,
        "SAVED": guardado
    }
    
    data = {"WIFI": []}
    try:
        with open(filedir, "r") as json_file:
            data = json.load(json_file)
        
        data["WIFI"].append(wifi)
        
        with open(filedir, "w") as json_file:
            json.dump(data, json_file, indent=2)
        print("Información guardada en wifi.json")
    
    except FileNotFoundError:
        data["WIFI"].append(wifi)
        
        with open(filedir, "w") as json_file:
            json.dump(data, json_file, indent=2)
        print("Información guardada en wifi.json")

def get_cached_entries():
    with open(filedir, "r") as file:
        return json.load(file)

def update_eww(entries):
    subprocess.run(["eww", "update", "wifi_entries={}".format(json.dumps(entries))])

def vaciar_json():
    data = {"WIFI": []}
    with open(filedir, "w") as json_file:
        json.dump(data, json_file, indent=2)
    print("Archivo wifi.json vaciado")        
        
        
CACHE_DIR = os.path.expanduser("~/.cache/eww")
CACHE_FILE = os.path.join(CACHE_DIR, "wifi.json")
saved_wifi = subprocess.run('nmcli --fields "NAME, TYPE" connection show | grep "wifi" | awk \'{print $1}\'', shell=True, text=True, capture_output=True)
saved_wifi = saved_wifi.stdout.strip()
saved_wifi = saved_wifi.split("\n")
saved_wifiArray = []
wifiArray= []

for i in saved_wifi:
    saved_wifiArray.append(i)
    

class __wifi__:
    def __init__(self, SSID, BARS, SECURITY, ICON):
        self.SSID = SSID
        self.BARS = BARS
        self.SECURITY = SECURITY
        self.ICON = ICON
        
        if SSID in saved_wifiArray:
            self.SAVED = True
        else:
            self.SAVED = False

get_wifiSEC = 'nmcli --fields "SECURITY" device wifi list | sed 1d | sed "/--/d"'
get_wifiSSID = 'nmcli --fields "SSID" device wifi list | awk \'{print $1}\' | sed "/--/d" | sed 1d'
get_wifiBARS = 'nmcli --fields "BARS" device wifi list | sed 1d | sed "/--/d"'
get_wifiICON = 'nmcli --fields "SECURITY" device wifi list | sed 1d | sed "s/  */ /g" | sed "s/  */ /g" | sed -E "s/WPA*.?\S/ /g" | sed "s/^--/ /g" | sed "s/  //g" | sed "/--/d"'

wifi_listSSID = subprocess.run(get_wifiSSID, capture_output=True, shell=True, text=True)
wifi_listSSID = wifi_listSSID.stdout.strip()
wifi_listSSID = wifi_listSSID.split("\n")

wifi_listSEC = subprocess.run(get_wifiSEC, capture_output=True, shell=True, text=True)
wifi_listSEC = wifi_listSEC.stdout.strip()
wifi_listSEC = wifi_listSEC.split("\n")

wifi_listBARS = subprocess.run(get_wifiBARS, capture_output=True, shell=True, text=True)
wifi_listBARS = wifi_listBARS.stdout.strip()
wifi_listBARS = wifi_listBARS.split("\n")

wifi_listICON = subprocess.run(get_wifiICON, capture_output=True, shell=True, text=True)
wifi_listICON = wifi_listICON.stdout.strip()
wifi_listICON = wifi_listICON.split("\n")


vaciar_json()

for i in range(len(wifi_listSSID)):
    wifi_listSSID[i] = __wifi__(wifi_listSSID[i], wifi_listBARS[i], wifi_listSEC[i], wifi_listICON[i])
    
    dato1 = wifi_listSSID[i].SSID
    dato2 = wifi_listSSID[i].ICON
    dato3 = wifi_listSSID[i].BARS
    dato4 = wifi_listSSID[i].SECURITY
    dato5 = wifi_listSSID[i].SAVED        
    guardar_en_json(dato1, dato2, dato4, dato5)
update_eww(get_cached_entries())